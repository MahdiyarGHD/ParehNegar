/*
 * ParehNegar.WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import AddContentWithKeyRequestContract from '../model/AddContentWithKeyRequestContract';
import ContentResponseContractMessageContract from '../model/ContentResponseContractMessageContract';
import DeleteByKeyRequestContract from '../model/DeleteByKeyRequestContract';
import GetByLanguageRequestContract from '../model/GetByLanguageRequestContract';
import MessageContract from '../model/MessageContract';

/**
* Content service.
* @module api/ContentApi
* @version 1.0
*/
export default class ContentApi {

    /**
    * Constructs a new ContentApi. 
    * @alias module:api/ContentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiContentAddBulkContentWithKeyPost operation.
     * @callback moduleapi/ContentApi~apiContentAddBulkContentWithKeyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessageContract{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/AddContentWithKeyRequestContract>} opts.body 
     * @param {module:api/ContentApi~apiContentAddBulkContentWithKeyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiContentAddBulkContentWithKeyPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MessageContract;

      return this.apiClient.callApi(
        '/api/Content/AddBulkContentWithKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiContentAddContentWithKeyPost operation.
     * @callback moduleapi/ContentApi~apiContentAddContentWithKeyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessageContract{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/AddContentWithKeyRequestContract} opts.body 
     * @param {module:api/ContentApi~apiContentAddContentWithKeyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiContentAddContentWithKeyPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MessageContract;

      return this.apiClient.callApi(
        '/api/Content/AddContentWithKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiContentDeleteByKeyPost operation.
     * @callback moduleapi/ContentApi~apiContentDeleteByKeyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessageContract{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteByKeyRequestContract} opts.body 
     * @param {module:api/ContentApi~apiContentDeleteByKeyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiContentDeleteByKeyPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = MessageContract;

      return this.apiClient.callApi(
        '/api/Content/DeleteByKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiContentGetByLanguagePost operation.
     * @callback moduleapi/ContentApi~apiContentGetByLanguagePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentResponseContractMessageContract{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/GetByLanguageRequestContract} opts.body 
     * @param {module:api/ContentApi~apiContentGetByLanguagePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiContentGetByLanguagePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ContentResponseContractMessageContract;

      return this.apiClient.callApi(
        '/api/Content/GetByLanguage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}